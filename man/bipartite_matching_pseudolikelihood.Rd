% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bipartite_matching_pseudo.R
\name{bipartite_matching_pseudolikelihood}
\alias{bipartite_matching_pseudolikelihood}
\title{Bipartite to unipartite matching via penalized pseudolikelihood.}
\usage{
bipartite_matching_pseudolikelihood(
  A,
  B,
  Q_true = NULL,
  family = "binomial",
  lambdas = 10^(-2:0),
  MAX_ITER = 20,
  verbose = FALSE,
  seeds = NULL,
  gamma = 0
)
}
\arguments{
\item{A}{Adjacency matrix of the unipartite graph.}

\item{B}{Bipartite graph incidence matrix, where rows correspond to the vertices in common
with the unipartite graph. Entries of B need to be binary in {0, 1}.}

\item{Q_true}{A permutation matrix with the true solution, if known. When the true solution is unknown, the default is NULL.}

\item{lambdas}{Penalty values for the optimization algorithm.}

\item{MAX_ITER}{Maximum number of iterations.}

\item{verbose}{If TRUE, the method prints an output after each iteration.}

\item{seeds}{If some vertices have known correspondence, a vector containing the indexes of these
vertices can be passed through this parameter, and the corresponding rows of A and B are assumed to be aligned.
The algorithm will then match the remaining vertices. The default is NULL if no seeds are available.}

\item{gamma}{Additional penalty for all variables. A positive small constant is needed when the sample size}
}
\value{

}
\description{
This function performs graph matching between a bipartite and a unipartite graphs that are assumed to
share a common set of vertices. The method performs an alignment of the non-zero parameters of a
graphical model for the bipartite graph and the nonzero entries of the unipartite adjacency matrix
via pseudolikelihood maximization.
}
