% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bipartite_matching_algorithm_v3.R
\name{bipartite_matching_icov}
\alias{bipartite_matching_icov}
\title{Bipartite to unipartite matching via penalized inverse covariance estimation}
\usage{
bipartite_matching_icov(
  A,
  B,
  Q_true = NULL,
  lambdas = 10^(seq(-2, -1, length.out = 5)),
  MAX_ITER = 30,
  verbose = FALSE,
  covariance = TRUE,
  seeds = NULL
)
}
\arguments{
\item{A}{Adjacency matrix of the unipartite graph.}

\item{B}{Bipartite graph incidence matrix, where rows correspond to the vertices in common
with the unipartite graph.}

\item{Q_true}{A permutation matrix with the true solution, if known. When the true solution is unknown, the default is NULL.}

\item{lambdas}{Penalty values for the optimization algorithm.}

\item{MAX_ITER}{Maximum number of iterations.}

\item{verbose}{If TRUE, the method prints an output after each iteration.}

\item{covariance}{Wheter to use covariance or correlation matrix.}

\item{seeds}{If some vertices have known correspondence, a vector containing the indexes of these
vertices can be passed through this parameter, and the corresponding rows of A and B are assumed to be aligned.
The algorithm will then match the remaining vertices. The default is NULL if no seeds are available.}
}
\value{

}
\description{
This function performs graph matching between a bipartite and a unipartite graph that are assumed to
share a common set of vertices. The method performs an alignment of the non-zero entries of the inverse covariance matrix
of the bipartite graph, and the nonzero entries of the unipartite adjacency matrix.
}
